# -*- coding: utf-8 -*-
"""EFT_Daniel_Casas_S9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rsGzbbGWF6mXoKqhzCNpAIZdlCmoOUn3
"""

from pickle import NONE
from sre_constants import NOT_LITERAL_IGNORE
from ast import NodeTransformer
# desarrollado por Daniel Casas
import numpy as np
import re
import random
import datetime
cont_asientos=0 # Contador de asientos
datos_vuelo={} # Genero un diccionario en el cual guardo los datos del pasajero.
puestos_ocupados=[] # Lista que la que voy a guardar los asientos ya comprados.
def menu_principal():
    print("\nMenu Vuelos Duoc:")
    print("1. Ver asientos disponibles")
    print("2. Comprar asientos")
    print("3. Anular vuelo")
    print("4. Modificar datos de pasajero")
    print("5. Salir")

def buscar_elemento(lista, elemento): # Función con parametros de entrada y retornos.
    if elemento in lista:
      return True
    else:
      return False
matriz=[
    [1, 2, 3, None, 4, 5, 6],
    [None, None, None, None, None, None, None],
    [7, 8, 9, None, 10, 11, 12],
    [None, None, None, None, None, None, None],
    [13, 14, 15, None, 16, 17, 18],
    [None, None, None, None, None, None, None],
    [19, 20, 21, None, 22, 23, 24],
    [None, None, None, None, None, None, None],
    [25, 26, 27, None, 28, 29, 30],
    [None, None, None, None, None, None, None],
    [31, 32, 33, None, 34, 35, 36],
    [None, None, None, None, None, None, None],
    [37, 38, 39, None, 40, 41, 42]]
matriz_copia=np.copy(matriz) # Está sería la matriz original.
def opcion_1():
  print("Asientos disponibles: \n")
  for fila in matriz:
    for elemento in fila:
        if elemento is None:
            print(" ", end="\t")
        else:
            print(elemento, end="\t")
    print()
def opcion_2():
  opcion_1()
  global matriz
  global cont_asientos
  np_matriz=np.array(matriz)
  print("\nAsientos normales: 1-30. Precio: $80.200 \nAsientos VIP: 31-42. Precio: 250.000")
  print("Con BancoDuoc obtiene un 15% de descuento en su pasaje.")
  seleccion_asiento=int(input("¿Qué número de asiento le gustaria comprar? "))
  encontrado=buscar_elemento(puestos_ocupados,seleccion_asiento)
  if encontrado:
    print("Asiento ocupado. Inténtelo nuevamente")
  else:
    if cont_asientos < 43:
      if seleccion_asiento >= 1 and seleccion_asiento < 43:
        cont_asientos=cont_asientos+1
        nombrePasajero=input("Nombre de la persona que volará: ")
        while nombrePasajero.strip()=="":
          print("El nombre del pasajero no puede quedar vacío. Inténtelo nuevamente")
          nombrePasajero=input("Nombre de la persona que volará: ")
        rutPasajero=input("RUT de la persona que volará (Sin puntos ni guión ej. 27054522k): ")
        while rutPasajero.strip()=="":
          print("El rut del pasajero no puede quedar vacío. Inténtelo nuevamente")
          rutPasajero=input("RUT de la persona que volará (Sin puntos ni guión ej. 27054522k): ")
        while True:
          try:
            telefonoPasajero=int(input("Número telefónico: "))
            break
          except ValueError:
            print("No has ingresado un número válido. Inténtelo nuevamente")
        bancoPasajero=input("Banco: ").lower()
        if seleccion_asiento < 31:
          costo_pasaje=80200
        else:
          costo_pasaje=250000
        if bancoPasajero == 'bancoduoc':
          costo_pasaje= costo_pasaje*0.85
        puestos_ocupados.append(seleccion_asiento)
        coordenadas=np.where(np_matriz == seleccion_asiento) # Encuentro la posición del asiento
        coordenada_fila = coordenadas[0][0]  # Fila
        coordenada_columna = coordenadas[1][0]  # Columna
        np_matriz[coordenada_fila][coordenada_columna]= 'x' # Le asigno la 'x' al asiento seleccionado
        matriz = np_matriz.tolist() # Actualizo matriz
        print(f"Costo del pasaje: {costo_pasaje}")
        print(f"El pasaje ha sido comprado con éxito")
        if rutPasajero not in datos_vuelo:
          datos_vuelo[rutPasajero] = [] # La clave que identificara al diccionario de datos. En este caso es el rut del pasajero.
          datos_vuelo[rutPasajero].append(seleccion_asiento)
          datos_vuelo[rutPasajero].append(nombrePasajero)
          datos_vuelo[rutPasajero].append(telefonoPasajero)
      else:
        print("Número inexistente. Inténtelo nuevamente")
    else:
      print("No hay asientos disponibles")
def opcion_3():
  rut_anular=input("Escribe el rut asociado a la compra del pasaje (Sin puntos ni guión ej. 18054522k): ")
  global matriz
  np_matriz=np.array(matriz)
  if rut_anular in datos_vuelo:
    num_vuelo=datos_vuelo[rut_anular][0]
    coordenadas=np.where(matriz_copia == num_vuelo) # Encuentro la posición del asiento en la matriz sin modificar
    coordenada_fila = coordenadas[0][0]
    coordenada_columna = coordenadas[1][0]
    if isinstance(num_vuelo, list): # Me aseguro de que la variable sea un valor simple y no una lista.
      num_vuelo = num_vuelo[0]
    np_matriz[coordenada_fila][coordenada_columna]= num_vuelo
    matriz = np_matriz.tolist()
    puestos_ocupados.remove(num_vuelo)
    print("El vuelo ha sido anulado.")
  else:
    print("Dicho RUT no se encuentra asociado a ningún vuelo.")
def opcion_4():
  rut_pasajero=input("Rut asociado a la compra del pasaje (Sin puntos ni guión ej. 18054522k): ")
  if rut_pasajero in datos_vuelo:
    asiento=int(input("Introduzca el asiento que selecciono en la compra: "))
    modificar_pasajero=input("¿Qué tipo de cambio le gustaría realizar al usuario? 1. Cambio de nombre 2. Número telefónico: ")
    if modificar_pasajero == '1':
      new_name=input("Ingrese el nuevo nombre para el pasajero seleccionado: ")
      datos_vuelo[rut_pasajero][1]=new_name # El nombre se encuentra en la posición 1 dentro del diccionario de datos asociado al rut.
    elif modificar_pasajero == '2':
      new_fono=input("Ingrese el nuevo número telefónico: ")
      datos_vuelo[rut_pasajero][2]=new_fono # El telefono se encuentra en la posición 2 dentro del diccionario de datos asociado al rut.
    print("El usuario ha sido modificado")
  else:
    print("Dicho RUT no se encuentra asociado a ningún vuelo.")
def opcion_5():
  print("Has seleccionado la opción de salir del programa.")
  nombre_salida=random.choice(['Daniel', 'Juan', 'Pedro', 'Enrique', 'Benjamin', 'Luis', 'Eduardo', 'Ariel', 'Esteban', 'Hernan', 'Alejandro'])
  apellido_salida=random.choice(['Casas', 'Avila', 'Azocar', 'Letelier', 'Pena', 'Osorio', 'Gutierrez', 'Pooley', 'Antileo', 'Figueroa', 'Torres'])
  fecha_actual = datetime.date.today()
  print(f"El día {fecha_actual} usted {nombre_salida} {apellido_salida} nos ha visitado. Gracias por preferirnos. ")
while True:
  menu_principal()
  opcion= input("Selecciona una opción: ")
  if opcion == "1":
    opcion_1()
  elif opcion == "2":
    opcion_2()
  elif opcion == "3":
    opcion_3()
  elif opcion == "4":
    opcion_4()
  elif opcion =="5":
    opcion_5()
    break

